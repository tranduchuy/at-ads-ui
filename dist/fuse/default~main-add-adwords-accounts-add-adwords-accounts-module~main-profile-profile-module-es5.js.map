{"version":3,"sources":["webpack:///./node_modules/ngx-mask/fesm5/ngx-mask.js","webpack:///./node_modules/ngx-mask/node_modules/tslib/tslib.es6.js","webpack:///./src/app/shared/components/input-number/input-number.component.html","webpack:///./src/app/shared/components/input-number/input-number.component.scss","webpack:///./src/app/shared/components/input-number/input-number.component.ts","webpack:///./src/app/shared/components/input-number/input-number.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;AAC0E;AACpF;AACvB;;AAE3C;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,EA+BV;AACD,WAAW,EAAE;AACb,iBAAiB,4DAAc;AAC/B,WAAW,EAAE;AACb,qBAAqB,4DAAc;AACnC,WAAW,EAAE;AACb,yBAAyB,4DAAc;AACvC,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,qGAAqG,kBAAkB;AACvH,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iBAAiB,oDAAM;AACvB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,cAAc;AAChD,4BAA4B;AAC5B,oBAAoB;AACpB;AACA,qBAAqB,EAAE,EAAE;AACzB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,kBAAkB,EAAE;AAC9C;AACA;AACA;AACA,uFAAuF,OAAO;AAC9F;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,kDAAkD,aAAa;AAC/D;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uBAAuB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,4BAA4B,EAAE;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,iDAAiD,EAAE;AACzE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,qDAAqD;AACrD,SAAS,gCAAgC,OAAO,oDAAM,mBAAmB;AACzE,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAqEV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,4BAA4B;AAC5B,oBAAoB;AACpB;AACA,qBAAqB,EAAE,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,qCAAqC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,cAAc;AAChD,4BAA4B;AAC5B,oBAAoB;AACpB;AACA,qBAAqB,EAAE,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,qCAAqC,EAAE;AAChE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,oBAAoB,EAAE;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,8CAA8C;AAC9C,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9E,SAAS,gCAAgC,OAAO,oDAAM,mBAAmB,GAAG;AAC5E,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS;AACzB,MAAM;AACN;AACA,CAAC;AACD,WAAW,EA0CV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA,sCAAsC,kBAAkB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,oGAAoG,cAAc;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,8CAA8C,EAAE,4CAA4C,EAAE;AAC9F;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,EAAE;AAC/B,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,EAAE,0CAA0C,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA,2DAA2D,EAAE;AAC7D;AACA;AACA;AACA,iEAAiE,EAAE;AACnE,qCAAqC,EAAE;AACvC,6FAA6F,EAAE;AAC/F,sEAAsE,EAAE;AACxE;AACA,8DAA8D,EAAE,4CAA4C,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6EAA6E,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA,4EAA4E,EAAE;AAC9E;AACA;AACA,qFAAqF,EAAE;AACvF,kDAAkD,EAAE,4CAA4C,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,6CAA6C;AAC7C,kCAAkC;AAClC;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,kBAAkB,EAAE;AAC1C;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,qCAAqC,gEAAiB;AACtD,yCAAyC,gEAAU;AACnD,wCAAwC;AACxC;AACA,yCAAyC,sBAAsB,EAAE;AACjE;AACA,yBAAyB;AACzB;AACA,qCAAqC,4DAAa;AAClD,yCAAyC,gEAAU;AACnD,wCAAwC;AACxC;AACA,yCAAyC,sBAAsB,EAAE;AACjE;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD;AAChD,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9E,SAAS,oBAAoB;AAC7B,SAAS,gCAAgC,OAAO,oDAAM,mBAAmB;AACzE,MAAM;AACN;AACA,0BAA0B,OAAO,mDAAK,mBAAmB;AACzD,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,yBAAyB,OAAO,mDAAK,EAAE;AACvC,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,uBAAuB,OAAO,mDAAK,EAAE;AACrC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,gCAAgC,OAAO,mDAAK,EAAE;AAC9C,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,wBAAwB,OAAO,mDAAK,EAAE;AACtC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,mBAAmB,OAAO,0DAAY,gCAAgC;AACtE,kBAAkB,OAAO,0DAAY,mBAAmB;AACxD,mBAAmB,OAAO,0DAAY,gCAAgC;AACtE,qBAAqB,OAAO,0DAAY,kCAAkC;AAC1E,yBAAyB,OAAO,0DAAY,wCAAwC;AACpF;AACA;AACA,CAAC;AACD,WAAW,EAkFV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2CAA2C;AAC3C,SAAS;AACT,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,6CAA6C,sDAAQ,GAAG,+BAA+B,sDAAQ,GAAG;AAClG;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,YAAY,EAAE;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sCAAsC,EAAE;AACxC;AACA,CAAC;;;AAGD;;AAEA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEoL;AACpL;;;;;;;;;;;;;AChlEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;;;;;ACnMA,0EAA0E,OAAO,wEAAwE,OAAO,sPAAsP,iBAAiB,2FAA2F,MAAM,sGAAsG,GAAG,qFAAqF,WAAW,8C;;;;;;;;;;;ACAjtB,yBAAyB,2BAA2B,8BAA8B,GAAG,mBAAmB,2BAA2B,GAAG,kBAAkB,gBAAgB,GAAG,YAAY,gBAAgB,GAAG,6CAA6C,+iC;;;;;;;;;;;;;;;;;;;;ACApK;AAC+B;AAC3D;AAGvD,IAAM,2BAA2B,GAAG;IAClC,OAAO,EAAE,gEAAiB;IAC1B,WAAW,EAAE,gEAAU,CAAC,cAAM,2BAAoB,EAApB,CAAoB,CAAC;IACnD,KAAK,EAAE,IAAI;CACZ,CAAC;AAEF;IAAA;IAKA,CAAC;IAJC,0CAAY,GAAZ,UAAa,OAA2B,EAAE,IAAwC;QAChF,IAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IACH,0BAAC;AAAD,CAAC;;AAUD;IAA0C,8EAAa;IAPvD;QAAA,qEAoEC;QA5DS,cAAQ,GAAG,CAAC,CAAC;QAErB,YAAM,GAAG,EAAE,CAAC;QACZ,WAAK,GAAG,IAAI,CAAC;QAEb,aAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAE3B,cAAQ,GAAG,KAAK,CAAC;QAEjB,UAAI,GAAG,EAAE,CAAC;QACV,iBAAW,GAAG,EAAE,CAAC;QAgBhB,kBAAY,GAAG,IAAI,0DAAY,EAAU,CAAC;QAC1C,gBAAU,GAAG,IAAI,0DAAY,EAAO,CAAC;QACrC,eAAS,GAAG,IAAI,0DAAY,EAAO,CAAC;QA6BtC,mBAAa,GAAG,UAAC,CAAM,IAAM,CAAC,CAAC;QAE/B,oBAAc,GAAG,cAAO,CAAC,CAAC;;IACpC,CAAC;IA/CC,sBAAI,uCAAK;aAIT;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAND,UAAU,CAAM;YACd,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAClB,CAAC;;;OAAA;IAOD,sBAAI,yCAAO;aAAX,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAAA;IAMD,4CAAa,GAAb;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,yCAAU,GAAV,UAAW,GAAQ;QACjB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IACnB,CAAC;IAED,+CAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED,gDAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,wCAAS,GAAT;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAhDQ;QAAR,2DAAK,EAAE;;0DAAkB;IAEjB;QAAR,2DAAK,EAAE;;sDAAW;IACV;QAAR,2DAAK,EAAE;;6DAAkB;IAG1B;QADC,2DAAK,EAAE;;;qDAGP;IAOD;QADC,2DAAK,EAAE;;;uDAGP;IAES;QAAT,4DAAM,EAAE;;8DAA2C;IAC1C;QAAT,4DAAM,EAAE;;4DAAsC;IACrC;QAAT,4DAAM,EAAE;;2DAAqC;IA7BnC,oBAAoB;QAPhC,+DAAS,CAAC;YACT,wLAA4C;YAC5C,QAAQ,EAAE,kBAAkB;YAE5B,SAAS,EAAE,CAAC,2BAA2B,CAAC;;SACzC,CAAC;OAEW,oBAAoB,CA6DhC;IAAD,2BAAC;CAAA,CA7DyC,kEAAa,GA6DtD;AA7DgC;;;;;;;;;;;;;;;;;;;;;;;AC1Bc;AACN;AACI;AACJ;AACuB;AACoB;AAepF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAb7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,gEAAc;gBACd,oEAAkB;gBAClB,+DAAa;gBACb,sDAAa,CAAC,OAAO,EAAE;aACxB;YACD,YAAY,EAAE,CAAC,4EAAoB,CAAC;YACpC,OAAO,EAAE,CAAC,4EAAoB,CAAC;SAChC,CAAC;OAEW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH","file":"default~main-add-adwords-accounts-add-adwords-accounts-module~main-profile-profile-module-es5.js","sourcesContent":["import { __read, __extends, __awaiter, __generator, __assign } from 'tslib';\nimport { InjectionToken, Injectable, Inject, ElementRef, Renderer2, Directive, forwardRef, Input, HostListener, Pipe, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction IConfig() { }\nif (false) {\n    /** @type {?} */\n    IConfig.prototype.suffix;\n    /** @type {?} */\n    IConfig.prototype.prefix;\n    /** @type {?} */\n    IConfig.prototype.thousandSeparator;\n    /** @type {?} */\n    IConfig.prototype.decimalMarker;\n    /** @type {?} */\n    IConfig.prototype.clearIfNotMatch;\n    /** @type {?} */\n    IConfig.prototype.showTemplate;\n    /** @type {?} */\n    IConfig.prototype.showMaskTyped;\n    /** @type {?} */\n    IConfig.prototype.placeHolderCharacter;\n    /** @type {?} */\n    IConfig.prototype.shownMaskExpression;\n    /** @type {?} */\n    IConfig.prototype.dropSpecialCharacters;\n    /** @type {?} */\n    IConfig.prototype.specialCharacters;\n    /** @type {?} */\n    IConfig.prototype.hiddenInput;\n    /** @type {?} */\n    IConfig.prototype.validation;\n    /** @type {?} */\n    IConfig.prototype.separatorLimit;\n    /** @type {?} */\n    IConfig.prototype.patterns;\n}\n/** @type {?} */\nvar config = new InjectionToken('config');\n/** @type {?} */\nvar NEW_CONFIG = new InjectionToken('NEW_CONFIG');\n/** @type {?} */\nvar INITIAL_CONFIG = new InjectionToken('INITIAL_CONFIG');\n/** @type {?} */\nvar initialConfig = {\n    suffix: '',\n    prefix: '',\n    thousandSeparator: ' ',\n    decimalMarker: '.',\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    placeHolderCharacter: '_',\n    dropSpecialCharacters: true,\n    hiddenInput: undefined,\n    shownMaskExpression: '',\n    separatorLimit: '',\n    validation: true,\n    // tslint:disable-next-line: quotemark\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true,\n        },\n        X: {\n            pattern: new RegExp('\\\\d'),\n            symbol: '*',\n        },\n        A: {\n            pattern: new RegExp('[a-zA-Z0-9]'),\n        },\n        S: {\n            pattern: new RegExp('[a-zA-Z]'),\n        },\n        d: {\n            pattern: new RegExp('\\\\d'),\n        },\n        m: {\n            pattern: new RegExp('\\\\d'),\n        },\n        M: {\n            pattern: new RegExp('\\\\d'),\n        },\n        H: {\n            pattern: new RegExp('\\\\d'),\n        },\n        h: {\n            pattern: new RegExp('\\\\d'),\n        },\n        s: {\n            pattern: new RegExp('\\\\d'),\n        },\n    },\n};\n/** @type {?} */\nvar timeMasks = ['Hh:m0:s0', 'Hh:m0', 'm0:s0'];\n/** @type {?} */\nvar withoutValidation = [\n    'percent',\n    'Hh',\n    's0',\n    'm0',\n    'separator',\n    'd0/M0/0000',\n    'd0/M0',\n    'd0',\n    'M0',\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MaskApplierService = /** @class */ (function () {\n    function MaskApplierService(_config) {\n        var _this = this;\n        this._config = _config;\n        this.maskExpression = '';\n        this.actualValue = '';\n        this.shownMaskExpression = '';\n        this._formatWithSeparators = (/**\n         * @param {?} str\n         * @param {?} thousandSeparatorChar\n         * @param {?} decimalChar\n         * @param {?} precision\n         * @return {?}\n         */\n        function (str, thousandSeparatorChar, decimalChar, precision) {\n            /** @type {?} */\n            var x = str.split(decimalChar);\n            /** @type {?} */\n            var decimals = x.length > 1 ? \"\" + decimalChar + x[1] : '';\n            /** @type {?} */\n            var res = x[0];\n            /** @type {?} */\n            var separatorLimit = _this.separatorLimit.replace(/\\s/g, '');\n            if (separatorLimit && +separatorLimit) {\n                res = res.slice(0, separatorLimit.length);\n            }\n            /** @type {?} */\n            var rgx = /(\\d+)(\\d{3})/;\n            while (rgx.test(res)) {\n                res = res.replace(rgx, '$1' + thousandSeparatorChar + '$2');\n            }\n            if (precision === undefined) {\n                return res + decimals;\n            }\n            else if (precision === 0) {\n                return res;\n            }\n            return res + decimals.substr(0, precision + 1);\n        });\n        this.percentage = (/**\n         * @param {?} str\n         * @return {?}\n         */\n        function (str) {\n            return Number(str) >= 0 && Number(str) <= 100;\n        });\n        this.getPrecision = (/**\n         * @param {?} maskExpression\n         * @return {?}\n         */\n        function (maskExpression) {\n            /** @type {?} */\n            var x = maskExpression.split('.');\n            if (x.length > 1) {\n                return Number(x[x.length - 1]);\n            }\n            return Infinity;\n        });\n        this.checkInputPrecision = (/**\n         * @param {?} inputValue\n         * @param {?} precision\n         * @param {?} decimalMarker\n         * @return {?}\n         */\n        function (inputValue, precision, decimalMarker) {\n            if (precision < Infinity) {\n                /** @type {?} */\n                var precisionRegEx = new RegExp(_this._charToRegExpExpression(decimalMarker) + (\"\\\\d{\" + precision + \"}.*$\"));\n                /** @type {?} */\n                var precisionMatch = inputValue.match(precisionRegEx);\n                if (precisionMatch && precisionMatch[0].length - 1 > precision) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n                else if (precision === 0 && inputValue.endsWith(decimalMarker)) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n            }\n            return inputValue;\n        });\n        this._shift = new Set();\n        this.clearIfNotMatch = this._config.clearIfNotMatch;\n        this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n        this.maskSpecialCharacters = this._config.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.prefix = this._config.prefix;\n        this.suffix = this._config.suffix;\n        this.thousandSeparator = this._config.thousandSeparator;\n        this.decimalMarker = this._config.decimalMarker;\n        this.hiddenInput = this._config.hiddenInput;\n        this.showMaskTyped = this._config.showMaskTyped;\n        this.placeHolderCharacter = this._config.placeHolderCharacter;\n        this.validation = this._config.validation;\n        this.separatorLimit = this._config.separatorLimit;\n    }\n    /**\n     * @param {?} inputValue\n     * @param {?} maskAndPattern\n     * @return {?}\n     */\n    MaskApplierService.prototype.applyMaskWithPattern = /**\n     * @param {?} inputValue\n     * @param {?} maskAndPattern\n     * @return {?}\n     */\n    function (inputValue, maskAndPattern) {\n        var _a = __read(maskAndPattern, 2), mask = _a[0], customPattern = _a[1];\n        this.customPattern = customPattern;\n        return this.applyMask(inputValue, mask);\n    };\n    /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    MaskApplierService.prototype.applyMask = /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    function (inputValue, maskExpression, position, cb) {\n        if (position === void 0) { position = 0; }\n        if (cb === void 0) { cb = (/**\n         * @return {?}\n         */\n        function () { }); }\n        if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n            return '';\n        }\n        /** @type {?} */\n        var cursor = 0;\n        /** @type {?} */\n        var result = '';\n        /** @type {?} */\n        var multi = false;\n        /** @type {?} */\n        var backspaceShift = false;\n        /** @type {?} */\n        var shift = 1;\n        /** @type {?} */\n        var stepBack = false;\n        if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n            inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n        }\n        if (!!this.suffix && inputValue.endsWith(this.suffix)) {\n            inputValue = inputValue.slice(0, inputValue.length - this.suffix.length);\n        }\n        /** @type {?} */\n        var inputArray = inputValue.toString().split('');\n        if (maskExpression === 'IP') {\n            this.ipError = !!(inputArray.filter((/**\n             * @param {?} i\n             * @return {?}\n             */\n            function (i) { return i === '.'; })).length < 3 && inputArray.length < 7);\n            maskExpression = '099.099.099.099';\n        }\n        if (maskExpression.startsWith('percent')) {\n            if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/]/)) {\n                inputValue = this._stripToDecimal(inputValue);\n                /** @type {?} */\n                var precision = this.getPrecision(maskExpression);\n                inputValue = this.checkInputPrecision(inputValue, precision, '.');\n            }\n            if (inputValue.indexOf('.') > 0 && !this.percentage(inputValue.substring(0, inputValue.indexOf('.')))) {\n                /** @type {?} */\n                var base = inputValue.substring(0, inputValue.indexOf('.') - 1);\n                inputValue = \"\" + base + inputValue.substring(inputValue.indexOf('.'), inputValue.length);\n            }\n            if (this.percentage(inputValue)) {\n                result = inputValue;\n            }\n            else {\n                result = inputValue.substring(0, inputValue.length - 1);\n            }\n        }\n        else if (maskExpression.startsWith('separator')) {\n            if (inputValue.match('[wа-яА-Я]') ||\n                inputValue.match('[ЁёА-я]') ||\n                inputValue.match('[a-z]|[A-Z]') ||\n                inputValue.match(/[-@#!$%\\\\^&*()_£¬'+|~=`{}\\[\\]:\";<>.?\\/]/) ||\n                inputValue.match('[^A-Za-z0-9,]')) {\n                inputValue = this._stripToDecimal(inputValue);\n            }\n            inputValue =\n                inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== this.decimalMarker\n                    ? inputValue.slice(1, inputValue.length)\n                    : inputValue;\n            // TODO: we had different rexexps here for the different cases... but tests dont seam to bother - check this\n            //  separator: no COMMA, dot-sep: no SPACE, COMMA OK, comma-sep: no SPACE, COMMA OK\n            /** @type {?} */\n            var thousandSeperatorCharEscaped = this._charToRegExpExpression(this.thousandSeparator);\n            /** @type {?} */\n            var decimalMarkerEscaped = this._charToRegExpExpression(this.decimalMarker);\n            /** @type {?} */\n            var invalidChars = '@#!$%^&*()_+|~=`{}\\\\[\\\\]:\\\\s,\";<>?\\\\/'\n                .replace(thousandSeperatorCharEscaped, '')\n                .replace(decimalMarkerEscaped, '');\n            /** @type {?} */\n            var invalidCharRegexp = new RegExp('[' + invalidChars + ']');\n            if (inputValue.match(invalidCharRegexp)) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n            /** @type {?} */\n            var precision = this.getPrecision(maskExpression);\n            inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            /** @type {?} */\n            var strForSep = inputValue.replace(new RegExp(thousandSeperatorCharEscaped, 'g'), '');\n            result = this._formatWithSeparators(strForSep, this.thousandSeparator, this.decimalMarker, precision);\n            /** @type {?} */\n            var commaShift = result.indexOf(',') - inputValue.indexOf(',');\n            /** @type {?} */\n            var shiftStep = result.length - inputValue.length;\n            if (shiftStep > 0 && result[position] !== ',') {\n                backspaceShift = true;\n                /** @type {?} */\n                var _shift = 0;\n                do {\n                    this._shift.add(position + _shift);\n                    _shift++;\n                } while (_shift < shiftStep);\n            }\n            else if ((commaShift !== 0 && position > 0 && !(result.indexOf(',') >= position && position > 3)) ||\n                (!(result.indexOf('.') >= position && position > 3) && shiftStep <= 0)) {\n                this._shift.clear();\n                backspaceShift = true;\n                shift = shiftStep;\n                position += shiftStep;\n                this._shift.add(position);\n            }\n            else {\n                this._shift.clear();\n            }\n        }\n        else {\n            for (\n            // tslint:disable-next-line\n            var i = 0, inputSymbol = inputArray[0]; i < inputArray.length; i++, inputSymbol = inputArray[i]) {\n                if (cursor === maskExpression.length) {\n                    break;\n                }\n                if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n                    result += inputSymbol;\n                    cursor += 2;\n                }\n                else if (maskExpression[cursor + 1] === '*' &&\n                    multi &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n                    result += inputSymbol;\n                    cursor += 3;\n                    multi = false;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '*') {\n                    result += inputSymbol;\n                    multi = true;\n                }\n                else if (maskExpression[cursor + 1] === '?' &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n                    result += inputSymbol;\n                    cursor += 3;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) ||\n                    (this.hiddenInput &&\n                        this.maskAvailablePatterns[maskExpression[cursor]] &&\n                        this.maskAvailablePatterns[maskExpression[cursor]].symbol === inputSymbol)) {\n                    if (maskExpression[cursor] === 'H') {\n                        if (Number(inputSymbol) > 2) {\n                            cursor += 1;\n                            /** @type {?} */\n                            var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'h') {\n                        if (result === '2' && Number(inputSymbol) > 3) {\n                            cursor += 1;\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            /** @type {?} */\n                            var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 's') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            /** @type {?} */\n                            var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    /** @type {?} */\n                    var daysCount = 31;\n                    if (maskExpression[cursor] === 'd') {\n                        if (Number(inputValue.slice(cursor, cursor + 2)) > daysCount || inputValue[cursor + 1] === '/') {\n                            cursor += 1;\n                            /** @type {?} */\n                            var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'M') {\n                        /** @type {?} */\n                        var monthsCount = 12;\n                        // mask without day\n                        /** @type {?} */\n                        var withoutDays = cursor === 0 &&\n                            (Number(inputSymbol) > 2 ||\n                                Number(inputValue.slice(cursor, cursor + 2)) > monthsCount ||\n                                inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for input\n                        /** @type {?} */\n                        var day1monthInput = inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            ((inputValue[cursor - 2] === '/' &&\n                                (Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount && inputValue[cursor] !== '/')) ||\n                                inputValue[cursor] === '/' ||\n                                ((inputValue[cursor - 3] === '/' &&\n                                    (Number(inputValue.slice(cursor - 2, cursor)) > monthsCount && inputValue[cursor - 1] !== '/')) ||\n                                    inputValue[cursor - 1] === '/'));\n                        // 10<day<31 && month<12 for input\n                        /** @type {?} */\n                        var day2monthInput = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] === '/' &&\n                            (Number(inputValue.slice(cursor, cursor + 2)) > monthsCount || inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for paste whole data\n                        /** @type {?} */\n                        var day1monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) > daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            (!inputValue.slice(cursor - 2, cursor).includes('/') &&\n                                Number(inputValue.slice(cursor - 2, cursor)) > monthsCount);\n                        // 10<day<31 && month<12 for paste whole data\n                        /** @type {?} */\n                        var day2monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] !== '/' &&\n                            Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount;\n                        if (withoutDays || day1monthInput || day2monthInput || day1monthPaste || day2monthPaste) {\n                            cursor += 1;\n                            /** @type {?} */\n                            var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                }\n                else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n                    result += maskExpression[cursor];\n                    cursor++;\n                    /** @type {?} */\n                    var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                    this._shift.add(shiftStep + this.prefix.length || 0);\n                    i--;\n                }\n                else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\n                    this.maskAvailablePatterns[maskExpression[cursor]] &&\n                    this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n                    if (!!inputArray[cursor] && maskExpression !== '099.099.099.099') {\n                        result += inputArray[cursor];\n                    }\n                    cursor++;\n                    i--;\n                }\n                else if (this.maskExpression[cursor + 1] === '*' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.maskExpression[cursor + 1] === '?' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.showMaskTyped && this.maskSpecialCharacters.indexOf(inputSymbol) < 0 && inputSymbol !== this.placeHolderCharacter) {\n                    stepBack = true;\n                }\n            }\n        }\n        if (result.length + 1 === maskExpression.length &&\n            this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n            result += maskExpression[maskExpression.length - 1];\n        }\n        /** @type {?} */\n        var newPosition = position + 1;\n        while (this._shift.has(newPosition)) {\n            shift++;\n            newPosition++;\n        }\n        /** @type {?} */\n        var actualShift = this._shift.has(position) ? shift : 0;\n        if (stepBack) {\n            actualShift--;\n        }\n        cb(actualShift, backspaceShift);\n        if (shift < 0) {\n            this._shift.clear();\n        }\n        /** @type {?} */\n        var res = \"\" + this.prefix + result + this.suffix;\n        if (result.length === 0) {\n            res = \"\" + this.prefix + result;\n        }\n        return res;\n    };\n    /**\n     * @param {?} inputSymbol\n     * @return {?}\n     */\n    MaskApplierService.prototype._findSpecialChar = /**\n     * @param {?} inputSymbol\n     * @return {?}\n     */\n    function (inputSymbol) {\n        return this.maskSpecialCharacters.find((/**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { return val === inputSymbol; }));\n    };\n    /**\n     * @protected\n     * @param {?} inputSymbol\n     * @param {?} maskSymbol\n     * @return {?}\n     */\n    MaskApplierService.prototype._checkSymbolMask = /**\n     * @protected\n     * @param {?} inputSymbol\n     * @param {?} maskSymbol\n     * @return {?}\n     */\n    function (inputSymbol, maskSymbol) {\n        this.maskAvailablePatterns = this.customPattern ? this.customPattern : this.maskAvailablePatterns;\n        return (this.maskAvailablePatterns[maskSymbol] &&\n            this.maskAvailablePatterns[maskSymbol].pattern &&\n            this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol));\n    };\n    /**\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    MaskApplierService.prototype._stripToDecimal = /**\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        return str\n            .split('')\n            .filter((/**\n         * @param {?} i\n         * @return {?}\n         */\n        function (i) { return i.match('\\\\d') || i === '.' || i === ','; }))\n            .join('');\n    };\n    /**\n     * @private\n     * @param {?} char\n     * @return {?}\n     */\n    MaskApplierService.prototype._charToRegExpExpression = /**\n     * @private\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        /** @type {?} */\n        var charsToEscape = '[\\\\^$.|?*+()';\n        return char === ' ' ? '\\\\s' : charsToEscape.indexOf(char) >= 0 ? '\\\\' + char : char;\n    };\n    MaskApplierService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    MaskApplierService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [config,] }] }\n    ]; };\n    return MaskApplierService;\n}());\nif (false) {\n    /** @type {?} */\n    MaskApplierService.prototype.dropSpecialCharacters;\n    /** @type {?} */\n    MaskApplierService.prototype.hiddenInput;\n    /** @type {?} */\n    MaskApplierService.prototype.showTemplate;\n    /** @type {?} */\n    MaskApplierService.prototype.clearIfNotMatch;\n    /** @type {?} */\n    MaskApplierService.prototype.maskExpression;\n    /** @type {?} */\n    MaskApplierService.prototype.actualValue;\n    /** @type {?} */\n    MaskApplierService.prototype.shownMaskExpression;\n    /** @type {?} */\n    MaskApplierService.prototype.maskSpecialCharacters;\n    /** @type {?} */\n    MaskApplierService.prototype.maskAvailablePatterns;\n    /** @type {?} */\n    MaskApplierService.prototype.prefix;\n    /** @type {?} */\n    MaskApplierService.prototype.suffix;\n    /** @type {?} */\n    MaskApplierService.prototype.thousandSeparator;\n    /** @type {?} */\n    MaskApplierService.prototype.decimalMarker;\n    /** @type {?} */\n    MaskApplierService.prototype.customPattern;\n    /** @type {?} */\n    MaskApplierService.prototype.ipError;\n    /** @type {?} */\n    MaskApplierService.prototype.showMaskTyped;\n    /** @type {?} */\n    MaskApplierService.prototype.placeHolderCharacter;\n    /** @type {?} */\n    MaskApplierService.prototype.validation;\n    /** @type {?} */\n    MaskApplierService.prototype.separatorLimit;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskApplierService.prototype._shift;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskApplierService.prototype._formatWithSeparators;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskApplierService.prototype.percentage;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskApplierService.prototype.getPrecision;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskApplierService.prototype.checkInputPrecision;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MaskApplierService.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MaskService = /** @class */ (function (_super) {\n    __extends(MaskService, _super);\n    function MaskService(document, _config, _elementRef, _renderer) {\n        var _this = _super.call(this, _config) || this;\n        _this.document = document;\n        _this._config = _config;\n        _this._elementRef = _elementRef;\n        _this._renderer = _renderer;\n        _this.maskExpression = '';\n        _this.isNumberValue = false;\n        _this.showMaskTyped = false;\n        _this.placeHolderCharacter = '_';\n        _this.maskIsShown = '';\n        _this.selStart = null;\n        _this.selEnd = null;\n        _this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        _this._formElement = _this._elementRef.nativeElement;\n        return _this;\n    }\n    // tslint:disable-next-line:cyclomatic-complexity\n    // tslint:disable-next-line:cyclomatic-complexity\n    /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    MaskService.prototype.applyMask = \n    // tslint:disable-next-line:cyclomatic-complexity\n    /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    function (inputValue, maskExpression, position, cb) {\n        var _this = this;\n        if (position === void 0) { position = 0; }\n        if (cb === void 0) { cb = (/**\n         * @return {?}\n         */\n        function () { }); }\n        if (!maskExpression) {\n            return inputValue;\n        }\n        this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n        if (this.maskExpression === 'IP' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (!inputValue && this.showMaskTyped) {\n            this.formControlResult(this.prefix);\n            return this.prefix + this.maskIsShown;\n        }\n        /** @type {?} */\n        var getSymbol = !!inputValue && typeof this.selStart === 'number' ? inputValue[this.selStart] : '';\n        /** @type {?} */\n        var newInputValue = '';\n        if (this.hiddenInput !== undefined) {\n            /** @type {?} */\n            var actualResult = this.actualValue.split('');\n            // tslint:disable no-unused-expression\n            inputValue !== '' && actualResult.length\n                ? typeof this.selStart === 'number' && typeof this.selEnd === 'number'\n                    ? inputValue.length > actualResult.length\n                        ? actualResult.splice(this.selStart, 0, getSymbol)\n                        : inputValue.length < actualResult.length\n                            ? actualResult.length - inputValue.length === 1\n                                ? actualResult.splice(this.selStart - 1, 1)\n                                : actualResult.splice(this.selStart, this.selEnd - this.selStart)\n                            : null\n                    : null\n                : (actualResult = []);\n            // tslint:enable no-unused-expression\n            newInputValue = this.actualValue.length ? this.shiftTypedSymbols(actualResult.join('')) : inputValue;\n        }\n        newInputValue = Boolean(newInputValue) && newInputValue.length ? newInputValue : inputValue;\n        /** @type {?} */\n        var result = _super.prototype.applyMask.call(this, newInputValue, maskExpression, position, cb);\n        this.actualValue = this.getActualValue(result);\n        // handle some separator implications:\n        // a.) adjust decimalMarker default (. -> ,) if thousandSeparator is a dot\n        if (this.thousandSeparator === '.' && this.decimalMarker === '.') {\n            this.decimalMarker = ',';\n        }\n        // b) remove decimal marker from list of special characters to mask\n        if (this.maskExpression.startsWith('separator') && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) { return item !== _this.decimalMarker; }));\n        }\n        this.formControlResult(result);\n        if (!this.showMaskTyped) {\n            if (this.hiddenInput) {\n                return result && result.length ? this.hideInput(result, this.maskExpression) : result;\n            }\n            return result;\n        }\n        /** @type {?} */\n        var resLen = result.length;\n        /** @type {?} */\n        var prefNmask = this.prefix + this.maskIsShown;\n        return result + (this.maskExpression === 'IP' ? prefNmask : prefNmask.slice(resLen));\n    };\n    /**\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    MaskService.prototype.applyValueChanges = /**\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    function (position, cb) {\n        if (position === void 0) { position = 0; }\n        if (cb === void 0) { cb = (/**\n         * @return {?}\n         */\n        function () { }); }\n        this._formElement.value = this.applyMask(this._formElement.value, this.maskExpression, position, cb);\n        if (this._formElement === this.document.activeElement) {\n            return;\n        }\n        this.clearIfNotMatchFn();\n    };\n    /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @return {?}\n     */\n    MaskService.prototype.hideInput = /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @return {?}\n     */\n    function (inputValue, maskExpression) {\n        var _this = this;\n        return inputValue\n            .split('')\n            .map((/**\n         * @param {?} curr\n         * @param {?} index\n         * @return {?}\n         */\n        function (curr, index) {\n            if (_this.maskAvailablePatterns &&\n                _this.maskAvailablePatterns[maskExpression[index]] &&\n                _this.maskAvailablePatterns[maskExpression[index]].symbol) {\n                return _this.maskAvailablePatterns[maskExpression[index]].symbol;\n            }\n            return curr;\n        }))\n            .join('');\n    };\n    // this function is not necessary, it checks result against maskExpression\n    // this function is not necessary, it checks result against maskExpression\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    MaskService.prototype.getActualValue = \n    // this function is not necessary, it checks result against maskExpression\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        var _this = this;\n        /** @type {?} */\n        var compare = res\n            .split('')\n            .filter((/**\n         * @param {?} symbol\n         * @param {?} i\n         * @return {?}\n         */\n        function (symbol, i) {\n            return _this._checkSymbolMask(symbol, _this.maskExpression[i]) ||\n                (_this.maskSpecialCharacters.includes(_this.maskExpression[i]) && symbol === _this.maskExpression[i]);\n        }));\n        if (compare.join('') === res) {\n            return compare.join('');\n        }\n        return res;\n    };\n    /**\n     * @param {?} inputValue\n     * @return {?}\n     */\n    MaskService.prototype.shiftTypedSymbols = /**\n     * @param {?} inputValue\n     * @return {?}\n     */\n    function (inputValue) {\n        var _this = this;\n        /** @type {?} */\n        var symbolToReplace = '';\n        /** @type {?} */\n        var newInputValue = (inputValue &&\n            inputValue.split('').map((/**\n             * @param {?} currSymbol\n             * @param {?} index\n             * @return {?}\n             */\n            function (currSymbol, index) {\n                if (_this.maskSpecialCharacters.includes(inputValue[index + 1]) &&\n                    inputValue[index + 1] !== _this.maskExpression[index + 1]) {\n                    symbolToReplace = currSymbol;\n                    return inputValue[index + 1];\n                }\n                if (symbolToReplace.length) {\n                    /** @type {?} */\n                    var replaceSymbol = symbolToReplace;\n                    symbolToReplace = '';\n                    return replaceSymbol;\n                }\n                return currSymbol;\n            }))) ||\n            [];\n        return newInputValue.join('');\n    };\n    /**\n     * @param {?=} inputVal\n     * @return {?}\n     */\n    MaskService.prototype.showMaskInInput = /**\n     * @param {?=} inputVal\n     * @return {?}\n     */\n    function (inputVal) {\n        if (this.showMaskTyped && !!this.shownMaskExpression) {\n            if (this.maskExpression.length !== this.shownMaskExpression.length) {\n                throw new Error('Mask expression must match mask placeholder length');\n            }\n            else {\n                return this.shownMaskExpression;\n            }\n        }\n        else if (this.showMaskTyped) {\n            if (inputVal) {\n                return this._checkForIp(inputVal);\n            }\n            return this.maskExpression.replace(/\\w/g, this.placeHolderCharacter);\n        }\n        return '';\n    };\n    /**\n     * @return {?}\n     */\n    MaskService.prototype.clearIfNotMatchFn = /**\n     * @return {?}\n     */\n    function () {\n        if (this.clearIfNotMatch &&\n            this.prefix.length + this.maskExpression.length + this.suffix.length !==\n                this._formElement.value.replace(/_/g, '').length) {\n            this.formElementProperty = ['value', ''];\n            this.applyMask(this._formElement.value, this.maskExpression);\n        }\n    };\n    Object.defineProperty(MaskService.prototype, \"formElementProperty\", {\n        set: /**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var _b = __read(_a, 2), name = _b[0], value = _b[1];\n            this._renderer.setProperty(this._formElement, name, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} mask\n     * @return {?}\n     */\n    MaskService.prototype.checkSpecialCharAmount = /**\n     * @param {?} mask\n     * @return {?}\n     */\n    function (mask) {\n        var _this = this;\n        /** @type {?} */\n        var chars = mask.split('').filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) { return _this._findSpecialChar(item); }));\n        return chars.length;\n    };\n    /**\n     * @private\n     * @param {?} inputVal\n     * @return {?}\n     */\n    MaskService.prototype._checkForIp = /**\n     * @private\n     * @param {?} inputVal\n     * @return {?}\n     */\n    function (inputVal) {\n        if (inputVal === '#') {\n            return this.placeHolderCharacter + \".\" + this.placeHolderCharacter + \".\" + this.placeHolderCharacter + \".\" + this.placeHolderCharacter;\n        }\n        /** @type {?} */\n        var arr = [];\n        for (var i = 0; i < inputVal.length; i++) {\n            if (inputVal[i].match('\\\\d')) {\n                arr.push(inputVal[i]);\n            }\n        }\n        if (arr.length <= 3) {\n            return this.placeHolderCharacter + \".\" + this.placeHolderCharacter + \".\" + this.placeHolderCharacter;\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return this.placeHolderCharacter + \".\" + this.placeHolderCharacter;\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return this.placeHolderCharacter;\n        }\n        if (arr.length > 9 && arr.length <= 12) {\n            return '';\n        }\n        return '';\n    };\n    /**\n     * @private\n     * @param {?} inputValue\n     * @return {?}\n     */\n    MaskService.prototype.formControlResult = /**\n     * @private\n     * @param {?} inputValue\n     * @return {?}\n     */\n    function (inputValue) {\n        if (Array.isArray(this.dropSpecialCharacters)) {\n            this.onChange(this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.dropSpecialCharacters));\n        }\n        else if (this.dropSpecialCharacters) {\n            this.onChange(this._checkSymbols(inputValue));\n        }\n        else {\n            this.onChange(this._removeSuffix(this._removePrefix(inputValue)));\n        }\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @param {?} specialCharactersForRemove\n     * @return {?}\n     */\n    MaskService.prototype._removeMask = /**\n     * @private\n     * @param {?} value\n     * @param {?} specialCharactersForRemove\n     * @return {?}\n     */\n    function (value, specialCharactersForRemove) {\n        return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    MaskService.prototype._removePrefix = /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.prefix) {\n            return value;\n        }\n        return value ? value.replace(this.prefix, '') : value;\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    MaskService.prototype._removeSuffix = /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.suffix) {\n            return value;\n        }\n        return value ? value.replace(this.suffix, '') : value;\n    };\n    /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    MaskService.prototype._retrieveSeparatorValue = /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    function (result) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters);\n    };\n    /**\n     * @private\n     * @param {?} specialCharactersForRemove\n     * @return {?}\n     */\n    MaskService.prototype._regExpForRemove = /**\n     * @private\n     * @param {?} specialCharactersForRemove\n     * @return {?}\n     */\n    function (specialCharactersForRemove) {\n        return new RegExp(specialCharactersForRemove.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) { return \"\\\\\" + item; })).join('|'), 'gi');\n    };\n    /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    MaskService.prototype._checkSymbols = /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    function (result) {\n        if (result === '') {\n            return result;\n        }\n        /** @type {?} */\n        var separatorPrecision = this._retrieveSeparatorPrecision(this.maskExpression);\n        /** @type {?} */\n        var separatorValue = this._retrieveSeparatorValue(result);\n        if (this.decimalMarker !== '.') {\n            separatorValue = separatorValue.replace(this.decimalMarker, '.');\n        }\n        if (this.isNumberValue) {\n            if (separatorPrecision) {\n                if (result === this.decimalMarker) {\n                    return null;\n                }\n                return this._checkPrecision(this.maskExpression, separatorValue);\n            }\n            else {\n                return Number(separatorValue);\n            }\n        }\n        else {\n            return separatorValue;\n        }\n    };\n    // TODO should think about helpers or separting decimal precision to own property\n    // TODO should think about helpers or separting decimal precision to own property\n    /**\n     * @private\n     * @param {?} maskExpretion\n     * @return {?}\n     */\n    MaskService.prototype._retrieveSeparatorPrecision = \n    // TODO should think about helpers or separting decimal precision to own property\n    /**\n     * @private\n     * @param {?} maskExpretion\n     * @return {?}\n     */\n    function (maskExpretion) {\n        /** @type {?} */\n        var matcher = maskExpretion.match(new RegExp(\"^separator\\\\.([^d]*)\"));\n        return matcher ? Number(matcher[1]) : null;\n    };\n    /**\n     * @private\n     * @param {?} separatorExpression\n     * @param {?} separatorValue\n     * @return {?}\n     */\n    MaskService.prototype._checkPrecision = /**\n     * @private\n     * @param {?} separatorExpression\n     * @param {?} separatorValue\n     * @return {?}\n     */\n    function (separatorExpression, separatorValue) {\n        if (separatorExpression.indexOf('2') > 0) {\n            return Number(separatorValue).toFixed(2);\n        }\n        return Number(separatorValue);\n    };\n    MaskService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    MaskService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [config,] }] },\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    return MaskService;\n}(MaskApplierService));\nif (false) {\n    /** @type {?} */\n    MaskService.prototype.maskExpression;\n    /** @type {?} */\n    MaskService.prototype.isNumberValue;\n    /** @type {?} */\n    MaskService.prototype.showMaskTyped;\n    /** @type {?} */\n    MaskService.prototype.placeHolderCharacter;\n    /** @type {?} */\n    MaskService.prototype.maskIsShown;\n    /** @type {?} */\n    MaskService.prototype.selStart;\n    /** @type {?} */\n    MaskService.prototype.selEnd;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MaskService.prototype._formElement;\n    /** @type {?} */\n    MaskService.prototype.onChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskService.prototype.document;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MaskService.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskService.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskService.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable deprecation\nvar MaskDirective = /** @class */ (function () {\n    function MaskDirective(document, _maskService, _config) {\n        this.document = document;\n        this._maskService = _maskService;\n        this._config = _config;\n        this.maskExpression = '';\n        this.specialCharacters = [];\n        this.patterns = {};\n        this.prefix = '';\n        this.suffix = '';\n        this.thousandSeparator = ' ';\n        this.decimalMarker = '.';\n        this.dropSpecialCharacters = null;\n        this.hiddenInput = null;\n        this.showMaskTyped = null;\n        this.placeHolderCharacter = null;\n        this.shownMaskExpression = null;\n        this.showTemplate = null;\n        this.clearIfNotMatch = null;\n        this.validation = null;\n        this.separatorLimit = null;\n        this._maskValue = '';\n        this._position = null;\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        this.onTouch = (/**\n         * @return {?}\n         */\n        function () { });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaskDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var maskExpression = changes.maskExpression, specialCharacters = changes.specialCharacters, patterns = changes.patterns, prefix = changes.prefix, suffix = changes.suffix, thousandSeparator = changes.thousandSeparator, decimalMarker = changes.decimalMarker, dropSpecialCharacters = changes.dropSpecialCharacters, hiddenInput = changes.hiddenInput, showMaskTyped = changes.showMaskTyped, placeHolderCharacter = changes.placeHolderCharacter, shownMaskExpression = changes.shownMaskExpression, showTemplate = changes.showTemplate, clearIfNotMatch = changes.clearIfNotMatch, validation = changes.validation, separatorLimit = changes.separatorLimit;\n        if (maskExpression) {\n            this._maskValue = changes.maskExpression.currentValue || '';\n        }\n        if (specialCharacters) {\n            if (!specialCharacters.currentValue || !Array.isArray(specialCharacters.currentValue)) {\n                return;\n            }\n            else {\n                this._maskService.maskSpecialCharacters = changes.specialCharacters.currentValue || [];\n            }\n        }\n        // Only overwrite the mask available patterns if a pattern has actually been passed in\n        if (patterns && patterns.currentValue) {\n            this._maskService.maskAvailablePatterns = patterns.currentValue;\n        }\n        if (prefix) {\n            this._maskService.prefix = prefix.currentValue;\n        }\n        if (suffix) {\n            this._maskService.suffix = suffix.currentValue;\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator.currentValue;\n        }\n        if (decimalMarker) {\n            this._maskService.decimalMarker = decimalMarker.currentValue;\n        }\n        if (dropSpecialCharacters) {\n            this._maskService.dropSpecialCharacters = dropSpecialCharacters.currentValue;\n        }\n        if (hiddenInput) {\n            this._maskService.hiddenInput = hiddenInput.currentValue;\n        }\n        if (showMaskTyped) {\n            this._maskService.showMaskTyped = showMaskTyped.currentValue;\n        }\n        if (placeHolderCharacter) {\n            this._maskService.placeHolderCharacter = placeHolderCharacter.currentValue;\n        }\n        if (shownMaskExpression) {\n            this._maskService.shownMaskExpression = shownMaskExpression.currentValue;\n        }\n        if (showTemplate) {\n            this._maskService.showTemplate = showTemplate.currentValue;\n        }\n        if (clearIfNotMatch) {\n            this._maskService.clearIfNotMatch = clearIfNotMatch.currentValue;\n        }\n        if (validation) {\n            this._maskService.validation = validation.currentValue;\n        }\n        if (separatorLimit) {\n            this._maskService.separatorLimit = separatorLimit.currentValue;\n        }\n        this._applyMask();\n    };\n    // tslint:disable-next-line: cyclomatic-complexity\n    // tslint:disable-next-line: cyclomatic-complexity\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    MaskDirective.prototype.validate = \n    // tslint:disable-next-line: cyclomatic-complexity\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var value = _a.value;\n        if (!this._maskService.validation) {\n            return null;\n        }\n        if (this._maskService.ipError) {\n            return { 'Mask error': true };\n        }\n        if (this._maskValue.startsWith('separator')) {\n            return null;\n        }\n        if (withoutValidation.includes(this._maskValue)) {\n            return null;\n        }\n        if (this._maskService.clearIfNotMatch) {\n            return null;\n        }\n        if (timeMasks.includes(this._maskValue)) {\n            return this._validateTime(value);\n        }\n        if (value && value.toString().length >= 1) {\n            /** @type {?} */\n            var counterOfOpt = 0;\n            var _loop_1 = function (key) {\n                if (this_1._maskService.maskAvailablePatterns[key].optional &&\n                    this_1._maskService.maskAvailablePatterns[key].optional === true) {\n                    if (this_1._maskValue.indexOf(key) !== this_1._maskValue.lastIndexOf(key)) {\n                        /** @type {?} */\n                        var opt = this_1._maskValue\n                            .split('')\n                            .filter((/**\n                         * @param {?} i\n                         * @return {?}\n                         */\n                        function (i) { return i === key; }))\n                            .join('');\n                        counterOfOpt += opt.length;\n                    }\n                    else if (this_1._maskValue.indexOf(key) !== -1) {\n                        counterOfOpt++;\n                    }\n                    if (this_1._maskValue.indexOf(key) !== -1 && value.toString().length >= this_1._maskValue.indexOf(key)) {\n                        return { value: null };\n                    }\n                    if (counterOfOpt === this_1._maskValue.length) {\n                        return { value: null };\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var key in this._maskService.maskAvailablePatterns) {\n                var state_1 = _loop_1(key);\n                if (typeof state_1 === \"object\")\n                    return state_1.value;\n            }\n            if (this._maskValue.indexOf('{') === 1 &&\n                value.toString().length === this._maskValue.length + Number(this._maskValue.split('{')[1].split('}')[0]) - 4) {\n                return null;\n            }\n            if (this._maskValue.indexOf('*') === 1 || this._maskValue.indexOf('?') === 1) {\n                return null;\n            }\n            else if ((this._maskValue.indexOf('*') > 1 && value.toString().length < this._maskValue.indexOf('*')) ||\n                (this._maskValue.indexOf('?') > 1 && value.toString().length < this._maskValue.indexOf('?')) ||\n                this._maskValue.indexOf('{') === 1) {\n                return { 'Mask error': true };\n            }\n            if (this._maskValue.indexOf('*') === -1 || this._maskValue.indexOf('?') === -1) {\n                /** @type {?} */\n                var length_1 = this._maskService.dropSpecialCharacters\n                    ? this._maskValue.length - this._maskService.checkSpecialCharAmount(this._maskValue) - counterOfOpt\n                    : this._maskValue.length - counterOfOpt;\n                if (value.toString().length < length_1) {\n                    return { 'Mask error': true };\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MaskDirective.prototype.onInput = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        /** @type {?} */\n        var el = (/** @type {?} */ (e.target));\n        this._inputValue = el.value;\n        if (!this._maskValue) {\n            this.onChange(el.value);\n            return;\n        }\n        /** @type {?} */\n        var position = el.selectionStart === 1\n            ? ((/** @type {?} */ (el.selectionStart))) + this._maskService.prefix.length\n            : ((/** @type {?} */ (el.selectionStart)));\n        /** @type {?} */\n        var caretShift = 0;\n        /** @type {?} */\n        var backspaceShift = false;\n        this._maskService.applyValueChanges(position, (/**\n         * @param {?} shift\n         * @param {?} _backspaceShift\n         * @return {?}\n         */\n        function (shift, _backspaceShift) {\n            caretShift = shift;\n            backspaceShift = _backspaceShift;\n        }));\n        // only set the selection if the element is active\n        if (this.document.activeElement !== el) {\n            return;\n        }\n        this._position = this._position === 1 && this._inputValue.length === 1 ? null : this._position;\n        /** @type {?} */\n        var positionToApply = this._position\n            ? this._inputValue.length + position + caretShift\n            : position + (this._code === 'Backspace' && !backspaceShift ? 0 : caretShift);\n        el.setSelectionRange(positionToApply, positionToApply);\n        if ((this.maskExpression.includes('H') || this.maskExpression.includes('M')) && caretShift === 0) {\n            el.setSelectionRange(((/** @type {?} */ (el.selectionStart))) + 1, ((/** @type {?} */ (el.selectionStart))) + 1);\n        }\n        this._position = null;\n    };\n    /**\n     * @return {?}\n     */\n    MaskDirective.prototype.onBlur = /**\n     * @return {?}\n     */\n    function () {\n        this._maskService.clearIfNotMatchFn();\n        this.onTouch();\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MaskDirective.prototype.onFocus = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        /** @type {?} */\n        var el = (/** @type {?} */ (e.target));\n        /** @type {?} */\n        var posStart = 0;\n        /** @type {?} */\n        var posEnd = 0;\n        if (el !== null &&\n            el.selectionStart !== null &&\n            el.selectionStart === el.selectionEnd &&\n            el.selectionStart > this._maskService.prefix.length &&\n            // tslint:disable-next-line\n            ((/** @type {?} */ (e))).keyCode !== 38)\n            if (this._maskService.showMaskTyped) {\n                // We are showing the mask in the input\n                this._maskService.maskIsShown = this._maskService.showMaskInInput();\n                if (el.setSelectionRange && this._maskService.prefix + this._maskService.maskIsShown === el.value) {\n                    // the input ONLY contains the mask, so position the cursor at the start\n                    el.focus();\n                    el.setSelectionRange(posStart, posEnd);\n                }\n                else {\n                    // the input contains some characters already\n                    if (el.selectionStart > this._maskService.actualValue.length) {\n                        // if the user clicked beyond our value's length, position the cursor at the end of our value\n                        el.setSelectionRange(this._maskService.actualValue.length, this._maskService.actualValue.length);\n                    }\n                }\n            }\n        /** @type {?} */\n        var nextValue = !el.value || el.value === this._maskService.prefix\n            ? this._maskService.prefix + this._maskService.maskIsShown\n            : el.value;\n        /** Fix of cursor position jumping to end in most browsers no matter where cursor is inserted onFocus */\n        if (el.value !== nextValue) {\n            el.value = nextValue;\n        }\n        /** fix of cursor position with prefix when mouse click occur */\n        if ((((/** @type {?} */ (el.selectionStart))) || ((/** @type {?} */ (el.selectionEnd)))) <= this._maskService.prefix.length) {\n            el.selectionStart = this._maskService.prefix.length;\n            return;\n        }\n    };\n    // tslint:disable-next-line: cyclomatic-complexity\n    // tslint:disable-next-line: cyclomatic-complexity\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MaskDirective.prototype.onKeyDown = \n    // tslint:disable-next-line: cyclomatic-complexity\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        this._code = e.code ? e.code : e.key;\n        /** @type {?} */\n        var el = (/** @type {?} */ (e.target));\n        this._inputValue = el.value;\n        if (e.keyCode === 38) {\n            e.preventDefault();\n        }\n        if (e.keyCode === 37 || e.keyCode === 8 || e.keyCode === 46) {\n            if (e.keyCode === 8 && el.value.length === 0) {\n                el.selectionStart = el.selectionEnd;\n            }\n            if (e.keyCode === 8 && ((/** @type {?} */ (el.selectionStart))) !== 0) {\n                // If specialChars is false, (shouldn't ever happen) then set to the defaults\n                this.specialCharacters = this.specialCharacters || this._config.specialCharacters;\n                if (this.prefix.length > 1 && ((/** @type {?} */ (el.selectionStart))) <= this.prefix.length) {\n                    el.setSelectionRange(this.prefix.length, this.prefix.length);\n                }\n                else {\n                    if (this._inputValue.length !== ((/** @type {?} */ (el.selectionStart))) &&\n                        ((/** @type {?} */ (el.selectionStart))) !== 1) {\n                        while (this.specialCharacters.includes(this._inputValue[((/** @type {?} */ (el.selectionStart))) - 1].toString()) &&\n                            ((this.prefix.length >= 1 && ((/** @type {?} */ (el.selectionStart))) > this.prefix.length) ||\n                                this.prefix.length === 0)) {\n                            el.setSelectionRange(((/** @type {?} */ (el.selectionStart))) - 1, ((/** @type {?} */ (el.selectionStart))) - 1);\n                        }\n                    }\n                    this.suffixCheckOnPressDelete(e.keyCode, el);\n                }\n            }\n            this.suffixCheckOnPressDelete(e.keyCode, el);\n            if (this._maskService.prefix.length &&\n                ((/** @type {?} */ (el.selectionStart))) <= this._maskService.prefix.length &&\n                ((/** @type {?} */ (el.selectionEnd))) <= this._maskService.prefix.length) {\n                e.preventDefault();\n            }\n            /** @type {?} */\n            var cursorStart = el.selectionStart;\n            // this.onFocus(e);\n            if (e.keyCode === 8 &&\n                !el.readOnly &&\n                cursorStart === 0 &&\n                el.selectionEnd === el.value.length &&\n                el.value.length !== 0) {\n                this._position = this._maskService.prefix ? this._maskService.prefix.length : 0;\n                this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\n            }\n        }\n        if (!!this.suffix &&\n            this.suffix.length > 1 &&\n            this._inputValue.length - this.suffix.length < ((/** @type {?} */ (el.selectionStart)))) {\n            el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n        }\n        this._maskService.selStart = el.selectionStart;\n        this._maskService.selEnd = el.selectionEnd;\n    };\n    /** It writes the value in the input */\n    /**\n     * It writes the value in the input\n     * @param {?} inputValue\n     * @return {?}\n     */\n    MaskDirective.prototype.writeValue = /**\n     * It writes the value in the input\n     * @param {?} inputValue\n     * @return {?}\n     */\n    function (inputValue) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (inputValue === undefined) {\n                    inputValue = '';\n                }\n                if (typeof inputValue === 'number') {\n                    inputValue = String(inputValue);\n                    inputValue = this.decimalMarker !== '.' ? inputValue.replace('.', this.decimalMarker) : inputValue;\n                    this._maskService.isNumberValue = true;\n                }\n                (inputValue && this._maskService.maskExpression) ||\n                    (this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped))\n                    ? (this._maskService.formElementProperty = [\n                        'value',\n                        this._maskService.applyMask(inputValue, this._maskService.maskExpression),\n                    ])\n                    : (this._maskService.formElementProperty = ['value', inputValue]);\n                this._inputValue = inputValue;\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaskDirective.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChange = fn;\n        this._maskService.onChange = this.onChange;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaskDirective.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouch = fn;\n    };\n    /**\n     * @param {?} keyCode\n     * @param {?} el\n     * @return {?}\n     */\n    MaskDirective.prototype.suffixCheckOnPressDelete = /**\n     * @param {?} keyCode\n     * @param {?} el\n     * @return {?}\n     */\n    function (keyCode, el) {\n        if (keyCode === 46 && this.suffix.length > 0) {\n            if (this._inputValue.length - this.suffix.length <= ((/** @type {?} */ (el.selectionStart)))) {\n                el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n            }\n        }\n        if (keyCode === 8) {\n            if (this.suffix.length > 1 &&\n                this._inputValue.length - this.suffix.length < ((/** @type {?} */ (el.selectionStart)))) {\n                el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n            }\n            if (this.suffix.length === 1 && this._inputValue.length === ((/** @type {?} */ (el.selectionStart)))) {\n                el.setSelectionRange(((/** @type {?} */ (el.selectionStart))) - 1, ((/** @type {?} */ (el.selectionStart))) - 1);\n            }\n        }\n    };\n    /** It disables the input element */\n    /**\n     * It disables the input element\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MaskDirective.prototype.setDisabledState = /**\n     * It disables the input element\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._maskService.formElementProperty = ['disabled', isDisabled];\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MaskDirective.prototype.onModelChange = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        if (!e) {\n            this._maskService.actualValue = '';\n        }\n    };\n    /**\n     * @private\n     * @param {?} maskExp\n     * @return {?}\n     */\n    MaskDirective.prototype._repeatPatternSymbols = /**\n     * @private\n     * @param {?} maskExp\n     * @return {?}\n     */\n    function (maskExp) {\n        var _this = this;\n        return ((maskExp.match(/{[0-9]+}/) &&\n            maskExp.split('').reduce((/**\n             * @param {?} accum\n             * @param {?} currval\n             * @param {?} index\n             * @return {?}\n             */\n            function (accum, currval, index) {\n                _this._start = currval === '{' ? index : _this._start;\n                if (currval !== '}') {\n                    return _this._maskService._findSpecialChar(currval) ? accum + currval : accum;\n                }\n                _this._end = index;\n                /** @type {?} */\n                var repeatNumber = Number(maskExp.slice(_this._start + 1, _this._end));\n                /** @type {?} */\n                var repaceWith = new Array(repeatNumber + 1).join(maskExp[_this._start - 1]);\n                return accum + repaceWith;\n            }), '')) ||\n            maskExp);\n    };\n    // tslint:disable-next-line:no-any\n    // tslint:disable-next-line:no-any\n    /**\n     * @private\n     * @return {?}\n     */\n    MaskDirective.prototype._applyMask = \n    // tslint:disable-next-line:no-any\n    /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue || '');\n        this._maskService.formElementProperty = [\n            'value',\n            this._maskService.applyMask(this._inputValue, this._maskService.maskExpression),\n        ];\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    MaskDirective.prototype._validateTime = /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var rowMaskLen = this._maskValue.split('').filter((/**\n         * @param {?} s\n         * @return {?}\n         */\n        function (s) { return s !== ':'; })).length;\n        if (+value[value.length - 1] === 0 && value.length < rowMaskLen) {\n            return { 'Mask error': true };\n        }\n        if (value.length <= rowMaskLen - 2) {\n            return { 'Mask error': true };\n        }\n        return null;\n    };\n    MaskDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mask]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef((/**\n                             * @return {?}\n                             */\n                            function () { return MaskDirective; })),\n                            multi: true,\n                        },\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: forwardRef((/**\n                             * @return {?}\n                             */\n                            function () { return MaskDirective; })),\n                            multi: true,\n                        },\n                        MaskService,\n                    ],\n                },] }\n    ];\n    /** @nocollapse */\n    MaskDirective.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: MaskService },\n        { type: undefined, decorators: [{ type: Inject, args: [config,] }] }\n    ]; };\n    MaskDirective.propDecorators = {\n        maskExpression: [{ type: Input, args: ['mask',] }],\n        specialCharacters: [{ type: Input }],\n        patterns: [{ type: Input }],\n        prefix: [{ type: Input }],\n        suffix: [{ type: Input }],\n        thousandSeparator: [{ type: Input }],\n        decimalMarker: [{ type: Input }],\n        dropSpecialCharacters: [{ type: Input }],\n        hiddenInput: [{ type: Input }],\n        showMaskTyped: [{ type: Input }],\n        placeHolderCharacter: [{ type: Input }],\n        shownMaskExpression: [{ type: Input }],\n        showTemplate: [{ type: Input }],\n        clearIfNotMatch: [{ type: Input }],\n        validation: [{ type: Input }],\n        separatorLimit: [{ type: Input }],\n        onInput: [{ type: HostListener, args: ['input', ['$event'],] }],\n        onBlur: [{ type: HostListener, args: ['blur',] }],\n        onFocus: [{ type: HostListener, args: ['click', ['$event'],] }],\n        onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\n        onModelChange: [{ type: HostListener, args: ['ngModelChange', ['$event'],] }]\n    };\n    return MaskDirective;\n}());\nif (false) {\n    /** @type {?} */\n    MaskDirective.prototype.maskExpression;\n    /** @type {?} */\n    MaskDirective.prototype.specialCharacters;\n    /** @type {?} */\n    MaskDirective.prototype.patterns;\n    /** @type {?} */\n    MaskDirective.prototype.prefix;\n    /** @type {?} */\n    MaskDirective.prototype.suffix;\n    /** @type {?} */\n    MaskDirective.prototype.thousandSeparator;\n    /** @type {?} */\n    MaskDirective.prototype.decimalMarker;\n    /** @type {?} */\n    MaskDirective.prototype.dropSpecialCharacters;\n    /** @type {?} */\n    MaskDirective.prototype.hiddenInput;\n    /** @type {?} */\n    MaskDirective.prototype.showMaskTyped;\n    /** @type {?} */\n    MaskDirective.prototype.placeHolderCharacter;\n    /** @type {?} */\n    MaskDirective.prototype.shownMaskExpression;\n    /** @type {?} */\n    MaskDirective.prototype.showTemplate;\n    /** @type {?} */\n    MaskDirective.prototype.clearIfNotMatch;\n    /** @type {?} */\n    MaskDirective.prototype.validation;\n    /** @type {?} */\n    MaskDirective.prototype.separatorLimit;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._maskValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._inputValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._end;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._code;\n    /** @type {?} */\n    MaskDirective.prototype.onChange;\n    /** @type {?} */\n    MaskDirective.prototype.onTouch;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype.document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._maskService;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MaskDirective.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MaskPipe = /** @class */ (function () {\n    function MaskPipe(_maskService) {\n        this._maskService = _maskService;\n    }\n    /**\n     * @param {?} value\n     * @param {?} mask\n     * @return {?}\n     */\n    MaskPipe.prototype.transform = /**\n     * @param {?} value\n     * @param {?} mask\n     * @return {?}\n     */\n    function (value, mask) {\n        if (!value && typeof value !== 'number') {\n            return '';\n        }\n        if (typeof mask === 'string') {\n            return this._maskService.applyMask(\"\" + value, mask);\n        }\n        return this._maskService.applyMaskWithPattern(\"\" + value, mask);\n    };\n    MaskPipe.decorators = [\n        { type: Pipe, args: [{\n                    name: 'mask',\n                    pure: true,\n                },] }\n    ];\n    /** @nocollapse */\n    MaskPipe.ctorParameters = function () { return [\n        { type: MaskApplierService }\n    ]; };\n    return MaskPipe;\n}());\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskPipe.prototype._maskService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxMaskModule = /** @class */ (function () {\n    function NgxMaskModule() {\n    }\n    /**\n     * @param {?=} configValue\n     * @return {?}\n     */\n    NgxMaskModule.forRoot = /**\n     * @param {?=} configValue\n     * @return {?}\n     */\n    function (configValue) {\n        return {\n            ngModule: NgxMaskModule,\n            providers: [\n                {\n                    provide: NEW_CONFIG,\n                    useValue: configValue,\n                },\n                {\n                    provide: INITIAL_CONFIG,\n                    useValue: initialConfig,\n                },\n                {\n                    provide: config,\n                    useFactory: _configFactory,\n                    deps: [INITIAL_CONFIG, NEW_CONFIG],\n                },\n                MaskApplierService,\n            ],\n        };\n    };\n    /**\n     * @param {?=} _configValue\n     * @return {?}\n     */\n    NgxMaskModule.forChild = /**\n     * @param {?=} _configValue\n     * @return {?}\n     */\n    function (_configValue) {\n        return {\n            ngModule: NgxMaskModule,\n        };\n    };\n    NgxMaskModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [MaskDirective, MaskPipe],\n                    declarations: [MaskDirective, MaskPipe],\n                },] }\n    ];\n    return NgxMaskModule;\n}());\n/**\n * \\@internal\n * @param {?} initConfig\n * @param {?} configValue\n * @return {?}\n */\nfunction _configFactory(initConfig, configValue) {\n    return configValue instanceof Function ? __assign({}, initConfig, configValue()) : __assign({}, initConfig, configValue);\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');\n}\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n['default'] || n;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n((/**\n * @return {?}\n */\nfunction () {\n    if (!commonjsGlobal.KeyboardEvent) {\n        commonjsGlobal.KeyboardEvent = (/**\n         * @param {?} _eventType\n         * @param {?} _init\n         * @return {?}\n         */\n        function (_eventType, _init) { });\n    }\n}))();\n\n\nvar customKeyboardEvent = {\n\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { INITIAL_CONFIG, MaskApplierService, MaskDirective, MaskPipe, MaskService, NEW_CONFIG, NgxMaskModule, _configFactory, config, initialConfig, timeMasks, withoutValidation };\n//# sourceMappingURL=ngx-mask.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","module.exports = \"<mat-form-field appearance=\\\"outline\\\">\\n  <mat-label>{{title}}</mat-label>\\n  <input matInput\\n         type='text'\\n         mask='{{_mask}}'\\n         [disabled]=\\\"isDisabled\\\"\\n         [(ngModel)]=\\\"_value\\\"\\n         [class]=\\\"classes\\\"\\n         [placeholder]=\\\"placeholder\\\"\\n         (blur)=\\\"onGotBlur()\\\"\\n         [errorStateMatcher]=\\\"matcher\\\"\\n         [ngModelOptions]=\\\"{standalone: true}\\\"\\n         (ngModelChange)=\\\"onChangeValue()\\\"/>\\n  <mat-icon matSuffix *ngIf=\\\"icon\\\">{{icon}}</mat-icon>\\n  <mat-error *ngIf=\\\"!pristine\\\">\\n    <div *ngFor=\\\"let m of errors\\\" class=\\\"error\\\">{{m}}</div>\\n  </mat-error>\\n  <mat-error *ngIf=\\\"pristine\\\">\\n    <div class=\\\"error\\\">{{errors[0]}}</div>\\n  </mat-error>\\n\\n</mat-form-field>\\n\"","module.exports = \"input {\\n  width: 100% !important;\\n  padding: 0 5px !important;\\n}\\ninput[disabled] {\\n  background-color: #ccc;\\n}\\nmat-form-field {\\n  width: 100%;\\n}\\nmat-icon {\\n  color: gray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZpZXR0cmFuL0Rlc2t0b3AvY2xpY2svZnJvbnRlbmQvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9pbnB1dC1udW1iZXIvaW5wdXQtbnVtYmVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9pbnB1dC1udW1iZXIvaW5wdXQtbnVtYmVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQUE7RUFDQSx5QkFBQTtBQ0NGO0FEQUU7RUFDRSxzQkFBQTtBQ0VKO0FEQ0E7RUFDRSxXQUFBO0FDRUY7QURDQTtFQUNFLFdBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbnB1dC1udW1iZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dCB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgNXB4ICFpbXBvcnRhbnQ7XG4gICZbZGlzYWJsZWRdIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xuICB9XG59XG5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5tYXQtaWNvbiB7XG4gIGNvbG9yOiBncmF5O1xufSIsImlucHV0IHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgcGFkZGluZzogMCA1cHggIWltcG9ydGFudDtcbn1cbmlucHV0W2Rpc2FibGVkXSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1pY29uIHtcbiAgY29sb3I6IGdyYXk7XG59Il19 */\"","import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NG_VALUE_ACCESSOR, NgForm } from '@angular/forms';\nimport { BaseComponent } from '../base/base.component';\nimport { ErrorStateMatcher } from '@angular/material';\n\nconst INPUT_NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputNumberComponent),\n  multi: true\n};\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && form.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n\n@Component({\n  templateUrl: './input-number.component.html',\n  selector: 'app-input-number',\n  styleUrls: ['./input-number.component.scss'],\n  providers: [INPUT_NUMBER_VALUE_ACCESSOR]\n})\n\nexport class InputNumberComponent extends BaseComponent implements ControlValueAccessor {\n  private _decimal = 0;\n  private _target;\n  _value = '';\n  _mask = '0*';\n\n  matcher = new MyErrorStateMatcher();\n\n  @Input() pristine = false;\n\n  @Input() icon = '';\n  @Input() placeholder = '';\n\n  @Input()\n  set value(v: any) {\n    this._value = v;\n  }\n\n  get value(): any {\n    return this._value;\n  }\n\n  @Input()\n  set decimal(value: number) {\n    this._decimal = value;\n  }\n\n  @Output() valueChanged = new EventEmitter<number>();\n  @Output() pressEnter = new EventEmitter<any>();\n  @Output() lostFocus = new EventEmitter<any>();\n\n  onChangeValue(): void {\n    this.updateModel();\n    this.valueChanged.emit(this.value);\n  }\n\n  writeValue(obj: any): void {\n    this.value = obj;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  updateModel(): void {\n    this.onModelChange(this.value);\n  }\n\n  onGotBlur(): void {\n    this.onModelTouched();\n    this.onModelChange(this.value);\n    this.lostFocus.emit();\n  }\n\n  private onModelChange = (_: any) => {};\n\n  private onModelTouched = () => {};\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { InputNumberComponent } from './input-number.component';\nimport {MatFormFieldModule, MatIconModule, MatInputModule} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatIconModule,\n    NgxMaskModule.forRoot()\n  ],\n  declarations: [InputNumberComponent],\n  exports: [InputNumberComponent]\n})\n\nexport class InputNumberModule {}\n"],"sourceRoot":""}