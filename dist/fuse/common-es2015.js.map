{"version":3,"sources":["webpack:///./src/app/main/website-management/website-management.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA2C;AAEe;AACR;AAUlD,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAEnC,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAI,CAAC;IAE1C,kBAAkB;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,kEAAG,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACxD,CAAC;IAED,aAAa,CAAC,SAAiB;QAC7B,MAAM,GAAG,GAAG,kEAAG,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACzE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,WAAW,CAAC,SAAiB;QAC3B,MAAM,GAAG,GAAG,kEAAG,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,MAAwB;QACjC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kEAAG,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACzD,CAAC;IAED,sBAAsB,CAAC,SAAiB;QACtC,MAAM,GAAG,GAAG,kEAAG,CAAC,OAAO,CAAC,sBAAsB,CAAC,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,uBAAuB,CAAC,SAAiB;QACvC,MAAM,GAAG,GAAG,kEAAG,CAAC,cAAc,CAAC,sBAAsB,CAAC,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACzF,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;CACF;AA/BY,wBAAwB;IAHpC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAG2B,+DAAU;GAF1B,wBAAwB,CA+BpC;AA/BoC","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { API } from '../../shared/constants/api.constant';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface AddWebsiteParams {\n  domain: string;\n  accountId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsiteManagementService {\n\n  constructor(private _http: HttpClient) { }\n\n  getAdwordsAccounts(): Observable<any> {\n    return this._http.get(API.AdwordsAccount.getAccounts);\n  }\n\n  removeWebsite(websiteId: string): Observable<any> {\n    const url = API.Website.removeWebsite.replace('{website_id}', websiteId);\n    return this._http.delete(url);\n  }\n\n  getWebsites(accountId: string): Observable<any> {\n    const url = API.Website.getWebsites.replace('{accountId}', accountId);\n    return this._http.get(url);\n  }\n\n  addWebsite(params: AddWebsiteParams): Observable<any> {\n    return this._http.post(API.Website.addWebsite, params);\n  }\n\n  getWebsiteTrackingInfo(accountId: string): Observable<any> {\n    const url = API.Website.getWebsiteTrackingInfo.replace('{account_id}', accountId);\n    return this._http.get(url);\n  }\n\n  getAdwordsAccountDetail(accountId: string): Observable<any> {\n    const url = API.AdwordsAccount.getAwordsAccountDetail.replace('{account_id}', accountId);\n    return this._http.get(url);\n  }\n}\n"],"sourceRoot":""}