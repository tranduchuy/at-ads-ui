{"version":3,"sources":["webpack:///./src/app/main/adwords-account-list/adwords-account-list.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA2C;AAEe;AACR;AASlD,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAEpC,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAI,CAAC;IAE1C,WAAW;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,kEAAG,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACxD,CAAC;IAED,aAAa,CAAC,SAAiB;QAC7B,MAAM,GAAG,GAAG,kEAAG,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QAChF,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,WAAW,CAAC,SAAiB;QAC3B,MAAM,GAAG,GAAG,kEAAG,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,aAAa,CAAC,SAAiB;QAC7B,MAAM,GAAG,GAAG,kEAAG,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACzE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,sBAAsB,CAAC,MAAqC;QAC1D,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kEAAG,CAAC,cAAc,CAAC,sBAAsB,EAAE,MAAM,CAAC,CAAC;IAC5E,CAAC;CACF;AA1BY,yBAAyB;IAHrC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAG2B,+DAAU;GAF1B,yBAAyB,CA0BrC;AA1BqC","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { API } from '../../shared/constants/api.constant';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface ICheckAccountAcceptanceParams {\n  adWordId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdwordsAccountListService {\n\n  constructor(private _http: HttpClient) { }\n\n  getAccounts(): Observable<any> {\n    return this._http.get(API.AdwordsAccount.getAccounts);\n  }\n\n  removeAccount(accountId: string): Observable<any> {\n    const url = API.AdwordsAccount.removeAccount.replace('{account_id}', accountId);\n    return this._http.delete(url);\n  }\n\n  getWebsites(accountId: string): Observable<any> {\n    const url = API.Website.getWebsites.replace('{accountId}', accountId);\n    return this._http.get(url);\n  }\n\n  removeWebsite(websiteId: string): Observable<any> {\n    const url = API.Website.removeWebsite.replace('{website_id}', websiteId);\n    return this._http.delete(url);\n  }\n\n  checkAccountAcceptance(params: ICheckAccountAcceptanceParams): Observable<any> {\n    return this._http.post(API.AdwordsAccount.checkAccountAcceptance, params);\n  }\n}\n"],"sourceRoot":""}